source variables

if [ "$serverType" == "Webserver" ]
then
if [ "$serverGeneration" == "Base" ]
then


# system
touch /root/TODO
mkdir /root/secrets
touch /root/secrets/wsSecrets.txt

# apt
apt-get update
apt-get upgrade -y
apt-get install python3-pip supervisor nginx opendkim opendkim-tools vnstat unzip fail2ban -y

# pip3
pip3 install --upgrade pip
pip3 install virtualenv

# hostnamectl
hostnamectl set-hostname $serverHostname

# sshd
ssh-keygen -t ed25519 -a 256 -f /root/secrets/${serverHostname} -N ""
cat /root/secrets/${serverHostname}.pub >> /home/ubuntu/.ssh/authorized_keys
rm /root/secrets/${serverHostname}.pub

# TODO
echo -e " -  Copy '/root/secrets' directory to secured, separate drive.\nThe '${serverHostname}' file contains the private key needed to SSH\nback into the server.\n\n" >> /root/TODO

# postfix
debconf-set-selections <<< "postfix postfix/mailname string ${serverHostname}.${serverFQDN}"
debconf-set-selections <<< "postfix postfix/main_mailer_type string 'Internet Site'"

apt-get install postfix -y

# opendkim
adduser postfix opendkim

mkdir -p /etc/opendkim/keys
mkdir /etc/opendkim/keys/noreply.${serverFQDN}
mkdir /etc/opendkim/keys/fwd.${serverFQDN}
mkdir /etc/opendkim/keys/burn.${serverFQDN}
mkdir /var/spool/postfix/opendkim

opendkim-genkey -b 2048 -d noreply.${serverFQDN} -D /etc/opendkim/keys/noreply.${serverFQDN} -s noreply -v
opendkim-genkey -b 2048 -d fwd.${serverFQDN} -D /etc/opendkim/keys/fwd.${serverFQDN} -s fwd -v
opendkim-genkey -b 2048 -d burn.${serverFQDN} -D /etc/opendkim/keys/burn.${serverFQDN} -s burn -v

chown -R opendkim:opendkim /etc/opendkim
chmod go-rw /etc/opendkim/keys
chown opendkim:opendkim /etc/opendkim/keys/noreply.${serverFQDN}/noreply.private
chown opendkim:opendkim /etc/opendkim/keys/fwd.${serverFQDN}/fwd.private
chown opendkim:opendkim /etc/opendkim/keys/burn.${serverFQDN}/burn.private
chown opendkim:postfix /var/spool/postfix/opendkim

cp /etc/opendkim/keys/noreply.${serverFQDN}/noreply.private /root/secrets/
cp /etc/opendkim/keys/fwd.${serverFQDN}/fwd.private /root/secrets/
cp /etc/opendkim/keys/burn.${serverFQDN}/burn.private /root/secrets/

# TODO
echo -e " -  Create DNS TXT records for the following keys:\n\n" >> /root/TODO
cat /etc/opendkim/keys/noreply.${serverFQDN}/noreply.txt >> /root/TODO
cat /etc/opendkim/keys/fwd.${serverFQDN}/fwd.txt >> /root/TODO
cat /etc/opendkim/keys/burn.${serverFQDN}/burn.txt >> /root/TODO

# postfix
touch /etc/postfix/virtual
postmap /etc/postfix/virtual

# systemctl
systemctl restart opendkim postfix

# system
cd /home/ubuntu

# virtualenv
virtualenv priveasyEnv
chown -R ubuntu:ubuntu priveasyEnv
source priveasyEnv/bin/activate

pip install django uwsgi psycopg2 celery django-environ django-kronos stripe twilio

deactivate

# django
git clone https://github.com/P5vc/WebserverBackend.git
cp -R WebserverBackend/* ./
rm -rf WebserverBackend

djangoSecretKey=$(gpg --armor --gen-random 2 64)
djangoSecretKey=${djangoSecretKey:0:64}
echo "$djangoSecretKey" >> /root/secrets/wsSecrets.txt
echo "SECRET_KEY=${djangoSecretKey}" >> ./Priveasy/Priveasy/settings/.env

echo "DJANGO_SETTINGS_MODULE=Priveasy.settings.pro" >> /etc/environment

chown -R ubuntu:ubuntu Priveasy

# ufw
ufw allow 22
ufw allow 80
ufw allow 443
ufw allow 58763
ufw allow 25
ufw allow 587
yes | ufw enable

# TODO
echo -e "\n\n -  After you save the secret key to a separate\ndrive, run 'sudo ufw delete allow 22'.\nThis will now block the standard SSH port (as a\nnon-standard port will now be used by default)." >> /root/TODO
echo -e "\n\n -  REBOOT THE SERVER!!" >> /root/TODO


fi
fi
