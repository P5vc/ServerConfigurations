# apt
apt-get update
apt-get upgrade -y
apt-get install gettext rabbitmq-server supervisor -y


# tor
wget -O- https://deb.torproject.org/torproject.org/A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89.asc | gpg --dearmor | tee /usr/share/keyrings/tor-archive-keyring.gpg >/dev/null


# pip3
pip3 install --upgrade pip
pip3 install virtualenv


# virtualenv
virtualenv /home/ubuntu/badAppleEnv
chown -R ubuntu:ubuntu /home/ubuntu/badAppleEnv
source /home/ubuntu/badAppleEnv/bin/activate

pip install celery django django-environ django[argon2] psycopg2-binary python-gnupg uwsgi

deactivate


# django
git clone https://github.com/P5vc/BadAppleBackend.git /home/ubuntu/badAppleBackend
srm -r /home/ubuntu/priveasyBackend/.git


djangoSecretKey=$(gpg --armor --gen-random 2 64)
djangoSecretKey=${djangoSecretKey:0:64}
echo "djangoSecretKey=${djangoSecretKey}" >> /root/${serverHostname}/secrets.txt
echo "SECRET_KEY=${djangoSecretKey}" >> /home/ubuntu/priveasyBackend/Priveasy/Priveasy/.env
echo "SECRET_KEY=${djangoSecretKey}" >> /home/ubuntu/badAppleBackend/BadApple/BadApple/settings/.env

echo "DJANGO_SETTINGS_MODULE=BadApple.settings.pro" >> /etc/environment
export DJANGO_SETTINGS_MODULE=BadApple.settings.pro

chown -R ubuntu:ubuntu /home/ubuntu/badAppleBackend

ln -s /home/ubuntu/badAppleBackend/BadApple/config/nginx.conf /etc/nginx/sites-enabled/BadApple.conf


# Modify Django Library Files To Support Tor:
pythonVersion=$(ls /home/ubuntu/badAppleEnv/lib/)

sed "s/    def scheme(self):/    def scheme(self):\n        ### START OF MODIFIED LINES ###\n        if (self.get_host() in settings.HOST_SCHEME_ALWAYS_HTTPS):\n            return 'https'\n        ### END OF MODIFIED LINES ###/1" /home/ubuntu/badAppleEnv/lib/${pythonVersion}/site-packages/django/http/request.py > /tmp/request.py
mv /tmp/request.py /home/ubuntu/badAppleEnv/lib/${pythonVersion}/site-packages/django/http/request.py

sed "s/return self._reject(request, REASON_INSECURE_REFERER)/### START OF MODIFIED LINES ###\n                    if (referer.netloc not in settings.HOST_SCHEME_ALWAYS_HTTPS):\n                        return self._reject(request, REASON_INSECURE_REFERER)\n                    ### END OF MODIFIED LINES###/1" /home/ubuntu/badAppleEnv/lib/${pythonVersion}/site-packages/django/middleware/csrf.py > /tmp/csrf.py
mv /tmp/csrf.py /home/ubuntu/badAppleEnv/lib/${pythonVersion}/site-packages/django/middleware/csrf.py


# postgres
sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -

apt-get update
apt-get install postgresql -y

badappleuserPass=$(gpg --armor --gen-random 2 64)
badappleuserPass=${badappleuserPass:0:64}
echo "badappleuserPostgresPassword=${badappleuserPass}" >> /root/${serverHostname}/secrets.txt
echo "DATABASE_PASSWORD=${badappleuserPass}" >> /home/ubuntu/badAppleBackend/BadApple/BadApple/settings/.env

sudo -u postgres psql -c "CREATE DATABASE badappledb;"
sudo -u postgres psql -c "CREATE USER badappleuser WITH LOGIN PASSWORD '${badappleuserPass}';"
sudo -u postgres psql -c "ALTER ROLE badappleuser SET client_encoding TO 'utf8';"
sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE badappledb TO badappleuser;"
sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO badappleuser;"


# openssl
yes "" | openssl req -x509 -nodes -days 1 -newkey rsa:2048 -keyout /etc/ssl/private/tempKey.key -out /etc/ssl/private/tempCert.crt || true


# certbot
snap install core; sudo snap refresh core
snap install --classic certbot
ln -s /snap/bin/certbot /usr/bin/certbot
certbot --nginx


# uwsgi
mkdir -p /var/log/uwsgi/
touch /var/log/uwsgi/uwsgi.log


# supervisor
mkdir -p /var/log/celery/
touch /var/log/celery/worker.log


# rabbitmq
systemctl enable rabbitmq-server


# tor
mkdir /var/tor
chown ubuntu:ubuntu /var/tor
chmod 660 /var/tor
mkdir /home/ubuntu/hiddenService
chmod 700 /home/ubuntu/hiddenService
