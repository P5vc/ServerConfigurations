#!/usr/bin/env bash

RED="\033[0;31m"
BLUE="\033[0;34m"
CYAN="\033[0;36m"
PURPLE="\033[0;35m"
NO_COLOR="\033[0m"

set -euo pipefail

function run() {
  INSTALL_PATH=/var/lib
  AV_PATH=$INSTALL_PATH/aviary/av
  GIT_URL=https://github.com/team-video/aviary.sh.git
  INVENTORY_GIT_URL="https://github.com/P5vc/ServerConfigurations.git"
  CONFIG_FILE=${INSTALL_PATH}/aviary/config
  CONFIG_FILE_URL="https://raw.githubusercontent.com/P5vc/ServerConfigurations/master/config"

  # Set hostname variable:
  echo -e "\n\n${BLUE}A hostname matching one of the valid options under the hosts\ndirectory must be set for this server. This hostname must\nbe unique.\n\n${CYAN}Desired Hostname: ${NO_COLOR}"
  read serverHostname
  hostnamectl set-hostname $serverHostname
  echo -e "\n\n${PURPLE}The server's new hostname will be: ${serverHostname}${NO_COLOR}"

  # If this is a webserver, make sure the database server has already been set up first:
  hostnameBeginning=${serverHostname:0:9}
  if [ "$hostnameBeginning" == "webserver" ]
  then
    if [ "$serverHostname" == "webserver0" ]
    then
      if [ ! -f "/root/secrets/dbSecrets.txt" ]
      then
        echo -e "\n\n${RED}The '/root/secrets/dbSecrets.txt' file could not be found.\nPlease set up a database server before this webserver,\nthen copy-over the database server's secrets folder\nto this webserver, before continuing with the install.${NO_COLOR}"
        exit 1
      fi
    else
      if [ ! -f "/root/secrets/ws0Secrets.txt" ]
      then
        echo -e "\n\n${RED}The '/root/secrets/ws0Secrets.txt' file could not be found.\nPlease set up a primary webserver before this webserver,\nthen copy-over the primary webserver's secrets folder\nto this webserver, before continuing with the install.${NO_COLOR}"
        exit 1
      fi
    fi
  fi

  # Set public IP variable:
  echo -e "\n\n${BLUE}In order to properly configure this server, it's public IPv4\naddress is required.\n\n${CYAN}Public IPv4 Address: ${NO_COLOR}"
  read serverPubIPv4
  echo -e "\n\n${PURPLE}The server's public IPv4 address has been set to: ${serverPubIPv4}${NO_COLOR}"

  # Set FQDN variables:
  echo -e "\n\n${BLUE}In order to properly configure this server, it's associated,\npublic fully-qualified domain name is required. This is most likely 'Priveasy.org'.\n\n${CYAN}Public FQDN: ${NO_COLOR}"
  read publicFQDN
  echo -e "\n\n${PURPLE}The server's public FQDN has been set to: ${publicFQDN}${NO_COLOR}"

  echo -e "\n\n${BLUE}In order to properly configure this server, it's associated,\ninternal/configuration fully-qualified domain name is required. This is most likely 'P5.vc'.\n\n${CYAN}Internal FQDN: ${NO_COLOR}"
  read internalFQDN
  echo -e "\n\n${PURPLE}The server's internal FQDN has been set to: ${internalFQDN}${NO_COLOR}"

  # Set latest Zcash client wallet version variable:
  if [ "$hostnameBeginning" == "webserver" ]
  then
    echo -e "\n\n${BLUE}In order to properly configure this server, the latest version\nof zecwallet-light-cli must be known (https://github.com/adityapk00/zecwallet-light-cli/releases).\nPlease enter the current version number (i.e. 1.4.0).\n\n${CYAN}Version Number: ${NO_COLOR}"
    read zcashCliVersion
    echo -e "\n\n${PURPLE}The current zecwallet-light-cli version has been set to: ${zcashCliVersion}${NO_COLOR}\n\n"
  fi

  # check for git dependency
  if ! /usr/bin/which git > /dev/null; then
    apt-get update
    apt-get install git -y
  fi

  if [[ -e /var/lib/aviary ]]; then 
    echo "Found existing installation at $INSTALL_PATH; exiting"
    exit 1
  fi

  echo Installing to ${INSTALL_PATH}...
  mkdir -p ${INSTALL_PATH}/aviary
  git clone $GIT_URL ${INSTALL_PATH}/aviary
  ln -sf /var/lib/aviary/av /usr/bin/av
  mkdir -p ${INSTALL_PATH}/aviary/inventory

  if [[ -z "$INVENTORY_GIT_URL" ]]
    then
      echo "Installing with no inventory git url; set later in $CONFIG_FILE"
    else
      git clone $INVENTORY_GIT_URL ${INSTALL_PATH}/aviary/inventory/
  fi

  cp ${INSTALL_PATH}/aviary/inventory/config ${INSTALL_PATH}/aviary/config

  # Save set variables:
  echo "serverHostname=${serverHostname}" >> ${INSTALL_PATH}/aviary/variables
  echo "serverPubIPv4=${serverPubIPv4}" >> ${INSTALL_PATH}/aviary/variables
  echo "publicFQDN=${publicFQDN}" >> ${INSTALL_PATH}/aviary/variables
  echo "internalFQDN=${internalFQDN}" >> ${INSTALL_PATH}/aviary/variables
  if [ "$hostnameBeginning" == "webserver" ]
  then
    echo "zcashCliVersion=${zcashCliVersion}" >> ${INSTALL_PATH}/aviary/variables
  fi

  echo Adding entry to /etc/crontab...
  echo "$(cat /etc/crontab | grep -v $AV_PATH)" > /etc/crontab
  echo "$(( RANDOM % 60 )) $(( RANDOM % 24 )) * * * root $AV_PATH directive >> /var/log/aviary-directive.log 2>&1" >> /etc/crontab
  echo "$(( RANDOM % 60 )) $(( RANDOM % 24 )) * * * root $AV_PATH apply >> /var/log/aviary.log 2>&1" >> /etc/crontab

  echo Done
}

run  # Wrap in function to ensure entire script is downloaded.
